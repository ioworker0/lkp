name: Reproduce Kernel Build Warning (Final LKP Method)

on:
  workflow_dispatch:

env:
  # The specific commit to be tested, used for the cache key
  KERNEL_COMMIT: 77da18de55ac6417e48905bec8b3c66f023b15a9

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Install dependencies (including lftp)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            git wget flex bison build-essential libssl-dev libelf-dev \
            binutils-loongarch64-linux-gnu lftp

      - name: Clone LKP Test Scripts
        run: |
          # The LKP robot uses helper scripts, so we must clone them first.
          git clone https://github.com/intel/lkp-tests.git ~/lkp-tests

      - name: Cache Kernel Repository
        id: kernel-cache
        uses: actions/cache@v4
        with:
          path: linux-next
          key: linux-next-${{ runner.os }}-${{ env.KERNEL_COMMIT }}

      - name: Clone kernel and checkout commit (if not cached)
        if: steps.kernel-cache.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss. Cloning full repository..."
          git clone https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
          cd linux-next
          git checkout ${{ env.KERNEL_COMMIT }}

      - name: Apply Quick Fix via sed
        working-directory: ./linux-next
        run: |
          echo "Applying noinline fix to kernel/hung_task.c..."
          sed -i 's/static int watchdog(void \*dummy)/static noinline int watchdog(void *dummy)/' kernel/hung_task.c
          sed -i 's/static int hungtask_pm_notify(struct notifier_block \*self,/static noinline int hungtask_pm_notify(struct notifier_block *self,/' kernel/hung_task.c
          echo "Fix applied. Verifying changes:"
          grep "noinline" kernel/hung_task.c

      - name: Prepare build environment
        working-directory: ./linux-next
        run: |
          wget -O config 'https://download.01.org/0day-ci/archive/20250730/202507301256.cZlxQ10s-lkp@intel.com/config'
          mkdir build_dir
          cp config build_dir/.config

      - name: Build the kernel using LKP scripts
        id: build_step
        working-directory: ./linux-next
        run: |
          echo "### Preparing config with LKP script... ###"
          # Run olddefconfig using the LKP wrapper script.
          # We specify COMPILER=clang-20 so the script knows which compiler to download and use.
          COMPILER_INSTALL_PATH=$HOME/0day COMPILER=clang-20 CROSS_COMPILE=loongarch64-linux-gnu- \
          ~/lkp-tests/kbuild/make.cross W=1 O=build_dir ARCH=loongarch olddefconfig

          echo "### Starting main build with LKP script... ###"
          # Run the main build (vmlinux target) using the LKP wrapper script
          COMPILER_INSTALL_PATH=$HOME/0day COMPILER=clang-20 CROSS_COMPILE=loongarch64-linux-gnu- \
          ~/lkp-tests/kbuild/make.cross W=1 O=build_dir ARCH=loongarch vmlinux -j$(nproc) | tee build.log || true

      - name: Show relevant warnings from build log
        working-directory: ./linux-next
        run: |
          echo "### Searching for relevant objtool warnings in build.log ###"
          grep "warning: objtool" build.log | grep -E "watchdog|hungtask_pm_notify" || echo "No relevant warnings found."
     
      - name: Upload build log for inspection
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: ./linux-next/build.log
